<!DOCTYPE html>
<html lang="{{ request.locale.iso_code }}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>
    {{ page_title }}
    {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
    {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
    {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
  </title>

  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}">
  {% endif %}

  <link rel="canonical" href="{{ canonical_url }}">

  <meta property="og:site_name" content="{{ shop.name }}">
  <meta property="og:url" content="{{ canonical_url }}">
  <meta property="og:title" content="{{ page_title | default: shop.name }}">
  <meta property="og:type" content="website">
  <meta property="og:description" content="{{ page_description | default: shop.description | escape }}">

  <link rel="icon" type="image/jpg" href="{{ 'logo.jpg' | asset_url }}">

  {{ content_for_header }}

  <!-- CSS Files -->
  <link rel="stylesheet" href="{{ 'reset.css' | asset_url }}">
  <link rel="stylesheet" href="{{ 'variables.css' | asset_url }}">
  <link rel="stylesheet" href="{{ 'layout.css' | asset_url }}">
  <link rel="stylesheet" href="{{ 'components.css' | asset_url }}">
  <link rel="stylesheet" href="{{ 'animations.css' | asset_url }}">
</head>
<body class="template-{{ template.name | handle }}">

  <main id="MainContent" role="main">
    {{ content_for_layout }}
  </main>

  <!-- JavaScript Files -->
  <script src="{{ 'utils.js' | asset_url }}" defer></script>
  <script src="{{ 'animations.js' | asset_url }}" defer></script>
  <script src="{{ 'main.js' | asset_url }}" defer></script>

// Alternating Section Backgrounds Script with Debugging
// Add this to your theme's main JavaScript file or in a <script> tag in theme.liquid

document.addEventListener('DOMContentLoaded', function() {
  console.log('üîç Starting background alternation script...');
  
  // Wait a moment for all styles to load
  setTimeout(function() {
    const sections = document.querySelectorAll('section:not(.header):not(.navbar)');
    
    console.log('üìä Found', sections.length, 'sections');
    
    const backgrounds = ['#050807', '#0A0A0A'];
    const borders = [
      { top: '1px solid rgba(0, 255, 65, 0.2)', bottom: '1px solid rgba(0, 255, 65, 0.2)' },
      { top: '1px solid rgba(0, 255, 65, 0.1)', bottom: 'none' }
    ];
    
    let alternateIndex = 0;
    
    sections.forEach((section, index) => {
      const className = section.className;
      console.log(`Section ${index}:`, className);
      
      // Hero - keep custom gradient background
      if (section.classList.contains('hero')) {
        console.log('  ‚Üí Setting HERO background with gradient');
        section.style.setProperty('background', '#0a0a0a', 'important');
        const heroBg = section.querySelector('.hero-bg');
        if (heroBg) {
          heroBg.style.setProperty('background', 'radial-gradient(circle at 20% 50%, rgba(0, 255, 65, 0.15) 0%, transparent 50%), radial-gradient(circle at 80% 30%, rgba(0, 255, 65, 0.1) 0%, transparent 50%)', 'important');
          heroBg.style.setProperty('position', 'absolute', 'important');
          heroBg.style.setProperty('inset', '0', 'important');
          heroBg.style.setProperty('z-index', '-1', 'important');
        }
        return;
      }
      
      // Products hero compact - same green gradient as hero
      if (section.classList.contains('products-hero-compact')) {
        console.log('  ‚Üí Setting PRODUCTS HERO background with gradient');
        section.style.setProperty('background', '#0a0a0a', 'important');
        section.style.setProperty('position', 'relative', 'important');
        section.style.setProperty('border-bottom', '1px solid rgba(0, 255, 65, 0.2)', 'important');
        section.style.setProperty('overflow', 'hidden', 'important');
        
        // Remove any existing overlay first
        const existingOverlay = section.querySelector('.hero-bg-overlay');
        if (existingOverlay) {
          existingOverlay.remove();
        }
        
        // Add gradient overlay
        const gradientOverlay = document.createElement('div');
        gradientOverlay.className = 'hero-bg-overlay';
        gradientOverlay.style.cssText = `
          position: absolute !important;
          top: 0 !important;
          left: 0 !important;
          right: 0 !important;
          bottom: 0 !important;
          width: 100% !important;
          height: 100% !important;
          background: radial-gradient(circle at 20% 50%, rgba(0, 255, 65, 0.15) 0%, transparent 50%), radial-gradient(circle at 80% 30%, rgba(0, 255, 65, 0.1) 0%, transparent 50%) !important;
          z-index: 0 !important;
          pointer-events: none !important;
        `;
        section.insertBefore(gradientOverlay, section.firstChild);
        
        // Make sure content is above overlay
        const container = section.querySelector('.container');
        if (container) {
          container.style.position = 'relative';
          container.style.zIndex = '10';
        }
        
        console.log('  ‚Üí Products hero gradient overlay added');
        return;
      }
      
      // All other sections alternate
      const bgIndex = alternateIndex % 2;
      console.log(`  ‚Üí Setting background ${backgrounds[bgIndex]}`);
      section.style.setProperty('background', backgrounds[bgIndex], 'important');
      section.style.setProperty('border-top', borders[bgIndex].top, 'important');
      if (borders[bgIndex].bottom !== 'none') {
        section.style.setProperty('border-bottom', borders[bgIndex].bottom, 'important');
      } else {
        section.style.removeProperty('border-bottom');
      }
      
      alternateIndex++;
    });
    
    console.log('‚úÖ Alternating backgrounds applied successfully!');
    console.log('üìç Total alternating sections:', alternateIndex);
  }, 100); // Wait 100ms for styles to load
});
</body>
</html>