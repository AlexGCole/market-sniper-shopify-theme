<!DOCTYPE html>
<html lang="{{ request.locale.iso_code }}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>
    {{ page_title }}
    {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
    {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
    {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
  </title>

  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}">
  {% endif %}

  <link rel="canonical" href="{{ canonical_url }}">

  <meta property="og:site_name" content="{{ shop.name }}">
  <meta property="og:url" content="{{ canonical_url }}">
  <meta property="og:title" content="{{ page_title | default: shop.name }}">
  <meta property="og:type" content="website">
  <meta property="og:description" content="{{ page_description | default: shop.description | escape }}">

  <link rel="icon" type="image/jpg" href="{{ 'logo.jpg' | asset_url }}">

  {{ content_for_header }}

  <!-- CSS Files -->
  <link rel="stylesheet" href="{{ 'reset.css' | asset_url }}">
  <link rel="stylesheet" href="{{ 'theme.css' | asset_url }}">
  <link rel="stylesheet" href="{{ 'animations.css' | asset_url }}">
  
  <!-- CRITICAL: Block hero animations before any other scripts run -->
  <style>
    .hero,
    .hero *,
    .hero::before,
    .hero::after,
    .hero *::before,
    .hero *::after {
      animation: none !important;
      transition: none !important;
      transform: none !important;
      opacity: 1 !important;
    }
  </style>
  
  <script>
    // Execute immediately to block animations before DOMContentLoaded
    (function() {
      // Mark hero as no-animate before anything else loads
      window.heroNoAnimate = true;
      
      // Run as soon as DOM is interactive (before DOMContentLoaded)
      function disableHeroAnimations() {
        const hero = document.querySelector('.hero');
        if (hero) {
          const allElements = hero.querySelectorAll('*');
          
          // Remove animation classes
          hero.classList.remove('animate-on-scroll', 'animate-slide-left', 'animate-slide-right');
          allElements.forEach(el => {
            el.classList.remove('animate-on-scroll', 'animate-slide-left', 'animate-slide-right', 'animate-scale');
          });
          
          // Force immediate visibility
          hero.style.opacity = '1';
          hero.style.transform = 'none';
          allElements.forEach(el => {
            el.style.opacity = '1';
            el.style.transform = 'none';
          });
        }
      }
      
      // Try multiple times to ensure it catches the hero
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', disableHeroAnimations);
      } else {
        disableHeroAnimations();
      }
      
      // Also run immediately in case hero is already in DOM
      setTimeout(disableHeroAnimations, 0);
    })();
  </script>
</head>
<body class="template-{{ template.name | handle }}">

  <main id="MainContent" role="main">
    {{ content_for_layout }}
  </main>

  <!-- JavaScript Files -->
  <script src="{{ 'utils.js' | asset_url }}" defer></script>
  <script src="{{ 'animations.js' | asset_url }}" defer></script>
  <script src="{{ 'main.js' | asset_url }}" defer></script>

</body>
</html>