<section class="hero">
  <div class="container">
    <div class="hero-content">
      {% if section.settings.show_badge and section.settings.badge_text != blank %}
        <span class="hero-badge animate-hero-left">{{ section.settings.badge_text }}</span>
      {% endif %}
      
      <h1 class="hero-title animate-hero-left">
        {{ section.settings.hero_title_line1 }}<br>
        <span class="gradient-text">{{ section.settings.hero_title_line2 }}</span>
      </h1>
      
      <p class="hero-subtitle animate-hero-right">{{ section.settings.hero_subtitle }}</p>
      
      <div class="hero-cta animate-hero-right">
        {% if section.settings.primary_button_text != blank %}
          <a href="{{ section.settings.primary_button_link }}" class="btn btn-primary">
            {{ section.settings.primary_button_text }}
          </a>
        {% endif %}
        {% if section.settings.secondary_button_text != blank %}
          <a href="{{ section.settings.secondary_button_link }}" class="btn btn-secondary">
            {{ section.settings.secondary_button_text }}
          </a>
        {% endif %}
      </div>
      
      {% if section.settings.show_stats %}
        <div class="hero-stats">
          {% for block in section.blocks %}
            {% assign is_even = forloop.index | modulo: 2 %}
            <div class="stat {% if is_even == 0 %}animate-hero-right{% else %}animate-hero-left{% endif %}">
              <div class="stat-number">{{ block.settings.stat_number }}</div>
              <div class="stat-label">{{ block.settings.stat_label }}</div>
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
  </div>
  <div class="hero-bg"></div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Get all hero animation elements
  const heroElements = document.querySelectorAll('.animate-hero-left, .animate-hero-right');
  
  // Add hero-visible class after a short delay to trigger animations
  setTimeout(() => {
    heroElements.forEach(element => {
      element.classList.add('hero-visible');
    });
  }, 100);
  
  // Scroll animations for other sections
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  }, observerOptions);
  
  // Observe all scroll-triggered animation elements
  const scrollElements = document.querySelectorAll(
    '.animate-on-scroll, .animate-slide-left, .animate-slide-right, .animate-scale, .animate-on-scroll-bidirectional'
  );
  
  scrollElements.forEach(el => observer.observe(el));
});
</script>

{% schema %}
{
  "name": "Hero Section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_badge",
      "label": "Show Badge",
      "default": false
    },
    {
      "type": "text",
      "id": "badge_text",
      "label": "Badge Text",
      "default": "New"
    },
    {
      "type": "text",
      "id": "hero_title_line1",
      "label": "Title Line 1",
      "default": "Precision Trading"
    },
    {
      "type": "text",
      "id": "hero_title_line2",
      "label": "Title Line 2 (Gradient)",
      "default": "Made Simple"
    },
    {
      "type": "textarea",
      "id": "hero_subtitle",
      "label": "Subtitle",
      "default": "Advanced indicators, automated alerts, and expert coaching to elevate your trading game"
    },
    {
      "type": "text",
      "id": "primary_button_text",
      "label": "Primary Button Text",
      "default": "Start Trading Smarter"
    },
    {
      "type": "url",
      "id": "primary_button_link",
      "label": "Primary Button Link"
    },
    {
      "type": "text",
      "id": "secondary_button_text",
      "label": "Secondary Button Text"
    },
    {
      "type": "url",
      "id": "secondary_button_link",
      "label": "Secondary Button Link"
    },
    {
      "type": "checkbox",
      "id": "show_stats",
      "label": "Show Statistics",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "stat",
      "name": "Statistic",
      "settings": [
        {
          "type": "text",
          "id": "stat_number",
          "label": "Number",
          "default": "2+"
        },
        {
          "type": "text",
          "id": "stat_label",
          "label": "Label",
          "default": "Years Optimized"
        }
      ]
    }
  ]
}
{% endschema %}