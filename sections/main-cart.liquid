{% comment %}
  sections/main-cart.liquid
  Shopping cart page - Setup fee as optional product
{% endcomment %}

<section class="cart-page">
  <div class="container">
    <h1 class="cart-title">Your Cart</h1>

    {% if cart.item_count > 0 %}
      <div class="cart-content">
        <!-- Cart Items -->
        <div class="cart-items">
          {% for item in cart.items %}
            {% assign is_setup = false %}
            {% if item.product.title contains 'Setup' or item.product.title contains 'Professional' %}
              {% assign is_setup = true %}
            {% endif %}
            
            <div class="cart-item {% if is_setup %}setup-item{% endif %}" data-line="{{ forloop.index }}">
              <div class="item-image">
                {% if item.image %}
                  <img src="{{ item.image | img_url: 'medium' }}" alt="{{ item.title | escape }}">
                {% elsif is_setup %}
                  <img src="{{ 'bot-suite-setup.jpg' | asset_url }}" alt="{{ item.title | escape }}">
                {% elsif item.product.handle contains 'annual' or item.product.handle contains '490' %}
                  <img src="{{ 'bot-suite-annual.jpg' | asset_url }}" alt="{{ item.title | escape }}">
                {% elsif item.product.handle contains 'monthly' or item.product.handle contains '49' %}
                  <img src="{{ 'bot-suite-monthly.jpg' | asset_url }}" alt="{{ item.title | escape }}">
                {% else %}
                  <img src="{{ 'trading-bot-suite.jpg' | asset_url }}" alt="{{ item.title | escape }}">
                {% endif %}
              </div>

              <div class="item-details">
                {% if is_setup %}
                  <span class="optional-badge">Optional<br>Add-On</span>
                {% endif %}
                
                <h3 class="item-title">{{ item.product.title }}</h3>
                {% if item.variant.title != 'Default Title' %}
                  <p class="item-variant">{{ item.variant.title }}</p>
                {% endif %}
                
                {% if item.selling_plan_allocation %}
                  <div class="subscription-info">
                    <span class="subscription-badge">üìÖ Subscription</span>
                    <p class="subscription-name">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                  </div>
                {% else %}
                  <p class="item-variant">one-time</p>
                {% endif %}

                <p class="item-price">{{ item.final_line_price | money }}</p>
              </div>

              <!-- Remove button positioned absolutely -->
              <button class="remove-btn" data-line="{{ forloop.index }}" aria-label="Remove item">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M18 6L6 18M6 6l12 12"/>
                </svg>
              </button>
            </div>
          {% endfor %}
        </div>

        <!-- TradingView Username Field -->
 <div class="tradingview-field-container">
  <h3 class="tradingview-title">üìä TradingView Account Information</h3>
  <p class="tradingview-description">Enter your TradingView username exactly as shown (case-sensitive)</p>
  <input 
    type="text" 
    id="cart-note" 
    name="note" 
    placeholder="TradingView username (case-sensitive)"
    value="{{ cart.note }}"
    class="tradingview-input"
    required
  >
  <p class="tradingview-note">* Must match exactly for activation</p>
</div>

        <!-- Cart Summary -->
        <div class="cart-summary">
          <h2>Order Summary</h2>
          
          <div class="summary-line">
            <span>Subtotal:</span>
            <span class="subtotal">{{ cart.total_price | money }}</span>
          </div>

          {% if cart.cart_level_discount_applications.size > 0 %}
            {% for discount in cart.cart_level_discount_applications %}
              <div class="summary-line discount">
                <span>Discount ({{ discount.title }}):</span>
                <span>-{{ discount.total_allocated_amount | money }}</span>
              </div>
            {% endfor %}
          {% endif %}

          <div class="summary-line total">
            <span>Total:</span>
            <span class="total-price">{{ cart.total_price | money }}</span>
          </div>

          <p class="tax-note">Taxes and shipping calculated at checkout</p>

          <button type="button" class="checkout-btn" onclick="validateAndCheckout()">
            Proceed to Checkout
          </button>

          <a href="/" class="continue-shopping">
            ‚Üê Continue Shopping
          </a>
        </div>
      </div>
    {% else %}
      <div class="empty-cart">
        <p class="empty-message">Your cart is empty</p>
        <a href="/#pricing" class="return-btn">View Pricing Plans</a>
      </div>
    {% endif %}
  </div>
</section>

<!-- Toast Notification -->
<div id="cart-toast" class="cart-toast"></div>

<style>
  .cart-page {
    padding: 60px 20px;
    background: linear-gradient(135deg, #0a0a0a 0%, #0d1b0d 100%);
    min-height: 70vh;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .cart-title {
    font-size: 2.5rem;
    color: #00ff41;
    margin-bottom: 40px;
    text-align: center;
    font-weight: 700;
  }

  .cart-content {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 40px;
  }

  .cart-items {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .cart-item {
    background: rgba(0, 255, 65, 0.03);
    border: 1px solid rgba(0, 255, 65, 0.2);
    border-radius: 15px;
    padding: 20px;
    padding-top: 50px;
    display: grid;
    grid-template-columns: 100px 1fr;
    gap: 20px;
    align-items: center;
    position: relative;
  }

  .cart-item.setup-item {
    background: rgba(255, 165, 0, 0.05);
    border: 2px solid #FFA500;
    box-shadow: 0 0 20px rgba(255, 165, 0, 0.3);
  }

  .item-image img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 10px;
  }

  .item-title {
    color: white;
    font-size: 1.2rem;
    margin-bottom: 5px;
  }

  .setup-item .item-title {
    color: #FFA500;
    font-size: 1.4rem;
    font-weight: 700;
  }

  .item-variant {
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
    margin-bottom: 10px;
  }

  .subscription-info {
    margin: 10px 0;
  }

  .subscription-badge {
    background: rgba(0, 255, 65, 0.2);
    color: #00ff41;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 600;
  }

  .subscription-name {
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
    margin-top: 5px;
  }

  .item-price {
    color: #00ff41;
    font-size: 1.2rem;
    font-weight: 700;
    margin-top: 10px;
  }

  .setup-item .item-price {
    color: #FFA500;
    font-size: 1.5rem;
  }

  .optional-badge {
    display: inline-block;
    background: #FFA500;
    color: #000;
    padding: 6px 16px;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 10px;
    line-height: 1.4;
  }

  .remove-btn {
    background: transparent;
    border: 1px solid rgba(255, 65, 65, 0.5);
    color: rgba(255, 65, 65, 0.8);
    padding: 8px;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 15px;
    right: 15px;
    width: 36px;
    height: 36px;
  }

  .remove-btn:hover {
    background: rgba(255, 65, 65, 0.1);
    border-color: #ff4141;
    color: #ff4141;
  }

  .cart-summary {
    background: rgba(0, 255, 65, 0.03);
    border: 1px solid rgba(0, 255, 65, 0.2);
    border-radius: 15px;
    padding: 30px;
    height: fit-content;
    position: sticky;
    top: 20px;
  }

  .cart-summary h2 {
    color: #00ff41;
    font-size: 1.5rem;
    margin-bottom: 20px;
  }

  .summary-line {
    display: flex;
    justify-content: space-between;
    margin-bottom: 15px;
    color: rgba(255, 255, 255, 0.8);
    font-size: 1rem;
  }

  .summary-line.discount {
    color: #00ff41;
  }

  .summary-line.total {
    border-top: 1px solid rgba(0, 255, 65, 0.3);
    padding-top: 15px;
    margin-top: 15px;
    font-size: 1.3rem;
    font-weight: 700;
    color: white;
  }

  .total-price {
    color: #00ff41;
  }

  .tax-note {
    color: rgba(255, 255, 255, 0.5);
    font-size: 0.85rem;
    margin: 15px 0 25px;
    text-align: center;
  }

  .checkout-btn {
    width: 100%;
    padding: 16px;
    background: linear-gradient(135deg, #00ff41, #00cc33);
    color: #000;
    border: none;
    border-radius: 10px;
    font-size: 1.1rem;
    font-weight: 700;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 255, 65, 0.4);
    margin-bottom: 15px;
  }

  .checkout-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 255, 65, 0.6);
  }

  .continue-shopping {
    display: block;
    text-align: center;
    color: rgba(255, 255, 255, 0.6);
    text-decoration: none;
    font-size: 0.95rem;
    transition: color 0.3s ease;
  }

  .continue-shopping:hover {
    color: #00ff41;
  }

  .empty-cart {
    text-align: center;
    padding: 80px 20px;
  }

  .empty-message {
    color: rgba(255, 255, 255, 0.6);
    font-size: 1.3rem;
    margin-bottom: 30px;
  }

  .return-btn {
    display: inline-block;
    padding: 15px 40px;
    background: linear-gradient(135deg, #00ff41, #00cc33);
    color: #000;
    text-decoration: none;
    border-radius: 10px;
    font-weight: 700;
    transition: all 0.3s ease;
  }

  .return-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 255, 65, 0.6);
  }

  /* Toast Notification */
  .cart-toast {
    position: fixed;
    bottom: 30px;
    right: 30px;
    background: rgba(0, 255, 65, 0.95);
    color: #000;
    padding: 15px 25px;
    border-radius: 10px;
    font-weight: 600;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease;
    pointer-events: none;
    z-index: 10000;
    box-shadow: 0 4px 15px rgba(0, 255, 65, 0.4);
  }

  .cart-toast.show {
    opacity: 1;
    transform: translateY(0);
  }

  .cart-toast.error {
    background: rgba(255, 65, 65, 0.95);
    color: white;
  }

  /* TradingView Username Field */
  .tradingview-field-container {
    background: rgba(0, 255, 65, 0.05);
    border: 2px solid #00ff41;
    border-radius: 15px;
    padding: 25px;
    margin-bottom: 30px;
    box-shadow: 0 0 20px rgba(0, 255, 65, 0.2);
  }

  .tradingview-title {
    color: #00ff41;
    font-size: 1.3rem;
    margin-bottom: 10px;
    font-weight: 700;
  }

  .tradingview-description {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.95rem;
    margin-bottom: 15px;
  }

  .tradingview-input {
    width: 100%;
    padding: 15px;
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(0, 255, 65, 0.3);
    border-radius: 10px;
    color: white;
    font-size: 1rem;
    transition: all 0.3s ease;
  }

  .tradingview-input:focus {
    outline: none;
    border-color: #00ff41;
    box-shadow: 0 0 10px rgba(0, 255, 65, 0.3);
  }

  .tradingview-input::placeholder {
    color: rgba(255, 255, 255, 0.4);
  }

  .tradingview-note {
    color: #00ff41;
    font-size: 0.85rem;
    margin-top: 10px;
    font-weight: 600;
  }

  @media (max-width: 968px) {
    .cart-content {
      grid-template-columns: 1fr;
    }

    .cart-summary {
      position: static;
    }

    .cart-item {
      grid-template-columns: 100px 1fr;
    }

    .cart-toast {
      bottom: 20px;
      right: 20px;
      left: 20px;
    }

    .tradingview-field-container {
      margin-bottom: 20px;
    }
  }

  @media (max-width: 640px) {
    .optional-badge {
      font-size: 0.7rem;
      padding: 5px 12px;
      line-height: 1.3;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const toast = document.getElementById('cart-toast');

  function showToast(message, isError = false) {
    toast.textContent = message;
    toast.classList.remove('error');
    if (isError) {
      toast.classList.add('error');
    }
    toast.classList.add('show');
    
    setTimeout(() => {
      toast.classList.remove('show');
    }, 2000);
  }

  // Remove item
  const removeButtons = document.querySelectorAll('.remove-btn');
  removeButtons.forEach(button => {
    button.addEventListener('click', function() {
      const line = this.dataset.line;
      
      fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          line: line,
          quantity: 0
        })
      })
      .then(response => response.json())
      .then(data => {
        showToast('Item removed from cart');
        setTimeout(() => location.reload(), 500);
      })
      .catch(error => {
        console.error('Error:', error);
        showToast('Error removing item', true);
      });
    });
  });

  // Validate TradingView username before checkout
  window.validateAndCheckout = function() {
    const tradingViewInput = document.getElementById('cart-note');
    const username = tradingViewInput.value.trim();
    
    if (!username) {
      showToast('Please enter your TradingView username', true);
      tradingViewInput.focus();
      return;
    }
    
    // Save the note to cart
    fetch('/cart/update.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        note: username
      })
    })
    .then(response => response.json())
    .then(data => {
      window.location.href = '/checkout';
    })
    .catch(error => {
      console.error('Error:', error);
      showToast('Error saving username', true);
    });
  }
});
</script>

{% schema %}
{
  "name": "Cart",
  "settings": []
}
{% endschema %}