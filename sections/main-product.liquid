{% comment %}
  sections/main-product.liquid
  Product page with add to cart functionality
{% endcomment %}

<section class="product-page">
  <div class="container">
    <div class="product-grid">
      <!-- Product Images -->
      <div class="product-images">
        {% if product.featured_image %}
          <img src="{{ product.featured_image | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
        {% else %}
          <div class="product-image-placeholder">
            <div class="placeholder-icon">ðŸ¤–</div>
            <h3>{{ product.title }}</h3>
            <p>Automated Trading Solution</p>
          </div>
        {% endif %}
      </div>

      <!-- Product Info -->
      <div class="product-info">
        <h1 class="product-title">{{ product.title }}</h1>
        
        <div class="product-price">
          <span class="price">{{ product.selected_or_first_available_variant.price | money }}</span>
          <span class="period">/mo</span>
          {% if product.compare_at_price > product.price %}
            <span class="compare-price">{{ product.compare_at_price | money }}</span>
          {% endif %}
        </div>

        <!-- Setup Fee Notice -->
        {% if product.title contains 'Bot' %}
          <div class="setup-fee-notice">
            <strong>$249</strong> one-time setup fee
          </div>
        {% endif %}

        {% if product.description != blank %}
          <div class="product-description">
            {{ product.description }}
          </div>
        {% else %}
          <div class="product-description">
            <h3>What's Included:</h3>
            <ul class="feature-list">
              <li>âœ“ Private Discord Access</li>
              <li>âœ“ Private Sniper Bot Discussion Channel</li>
              <li>âœ“ Automated Trading Bot</li>
              <li>âœ“ Bot Configuration & Setup</li>
              <li>âœ“ Ongoing Bot Optimization</li>
              <li>âœ“ Priority Bot Support</li>
            </ul>
          </div>
        {% endif %}

        <!-- Product Form -->
        {% form 'product', product, id: 'product-form' %}
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          
          <!-- Selling Plans (Subscriptions) -->
          {% if product.selling_plan_groups.size > 0 %}
            <div class="selling-plans">
              <label>Purchase Options:</label>
              {% for selling_plan_group in product.selling_plan_groups %}
                {% for selling_plan in selling_plan_group.selling_plans %}
                  <div class="selling-plan-option">
                    <input 
                      type="radio" 
                      name="selling_plan" 
                      value="{{ selling_plan.id }}" 
                      id="plan-{{ selling_plan.id }}"
                      {% if forloop.first %}checked{% endif %}
                    >
                    <label for="plan-{{ selling_plan.id }}">
                      <strong>{{ selling_plan.name }}</strong>
                      {% if selling_plan.description != blank %}
                        <br><span style="font-size: 0.9rem; opacity: 0.8;">{{ selling_plan.description }}</span>
                      {% endif %}
                    </label>
                  </div>
                {% endfor %}
              {% endfor %}
            </div>
          {% endif %}

          <!-- Quantity -->
          <div class="quantity-selector">
            <label for="quantity">Quantity:</label>
            <input type="number" name="quantity" id="quantity" value="1" min="1">
          </div>

          <!-- Add to Cart Button -->
          <button type="submit" name="add" class="add-to-cart-btn" id="add-to-cart">
            <span class="btn-text">Add to Cart</span>
          </button>

          <div id="cart-message" class="cart-message" style="display: none;"></div>
        {% endform %}
      </div>
    </div>
  </div>
</section>

<style>
  .product-page {
    padding: 100px 20px 100px;
    background: linear-gradient(135deg, #0a0a0a 0%, #0d1b0d 100%);
    min-height: 80vh;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .product-grid {
    display: grid;
    grid-template-columns: 450px 1fr;
    gap: 80px;
    align-items: start;
  }

  .product-images {
    position: relative;
  }

  .product-images img {
    width: 100%;
    max-height: 450px;
    object-fit: cover;
    border-radius: 20px;
    border: 1px solid rgba(0, 255, 65, 0.2);
    background: rgba(0, 255, 65, 0.05);
  }

  .product-image-placeholder {
    width: 100%;
    height: 450px;
    background: linear-gradient(135deg, rgba(0, 255, 65, 0.1) 0%, rgba(0, 255, 65, 0.05) 100%);
    border: 2px solid rgba(0, 255, 65, 0.3);
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 40px;
  }

  .placeholder-icon {
    font-size: 120px;
    margin-bottom: 30px;
    animation: float 3s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  .product-image-placeholder h3 {
    font-size: 2rem;
    color: #00ff41;
    margin-bottom: 15px;
    font-weight: 700;
  }

  .product-image-placeholder p {
    font-size: 1.2rem;
    color: rgba(255, 255, 255, 0.7);
  }

  .product-info {
    padding-top: 0;
  }

  .product-title {
    font-size: 2.8rem;
    color: #00ff41;
    margin-bottom: 25px;
    font-weight: 700;
    line-height: 1.2;
  }

  .product-price {
    margin-bottom: 20px;
    display: flex;
    align-items: baseline;
    gap: 8px;
  }

  .price {
    font-size: 3rem;
    color: #00ff41;
    font-weight: 800;
  }

  .period {
    font-size: 1.3rem;
    color: rgba(0, 255, 65, 0.7);
  }

  .compare-price {
    font-size: 1.5rem;
    color: rgba(255, 255, 255, 0.4);
    text-decoration: line-through;
    margin-left: 15px;
  }

  .setup-fee-notice {
    background: rgba(0, 255, 65, 0.15);
    border: 1px solid rgba(0, 255, 65, 0.4);
    border-radius: 12px;
    padding: 15px 20px;
    margin-bottom: 25px;
    color: rgba(255, 255, 255, 0.9);
    font-size: 1rem;
  }

  .setup-fee-notice strong {
    color: #00ff41;
    font-size: 1.3rem;
  }

  .product-description {
    color: rgba(255, 255, 255, 0.85);
    line-height: 1.8;
    margin-bottom: 35px;
    font-size: 1.05rem;
  }

  .product-description h3 {
    color: white;
    font-size: 1.3rem;
    margin-bottom: 15px;
    margin-top: 0;
  }

  .feature-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .feature-list li {
    padding: 10px 0;
    border-bottom: 1px solid rgba(0, 255, 65, 0.1);
    font-size: 1rem;
  }

  .feature-list li:last-child {
    border-bottom: none;
  }

  .selling-plans {
    background: rgba(0, 255, 65, 0.05);
    border: 1px solid rgba(0, 255, 65, 0.3);
    border-radius: 15px;
    padding: 25px;
    margin-bottom: 30px;
  }

  .selling-plans > label {
    display: block;
    color: white;
    font-weight: 700;
    margin-bottom: 20px;
    font-size: 1.1rem;
  }

  .selling-plan-option {
    background: rgba(0, 255, 65, 0.03);
    border: 1px solid rgba(0, 255, 65, 0.2);
    border-radius: 10px;
    padding: 15px;
    margin-bottom: 12px;
    display: flex;
    align-items: flex-start;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .selling-plan-option:hover {
    background: rgba(0, 255, 65, 0.08);
    border-color: rgba(0, 255, 65, 0.4);
  }

  .selling-plan-option:last-child {
    margin-bottom: 0;
  }

  .selling-plan-option input[type="radio"] {
    width: 20px;
    height: 20px;
    margin-right: 15px;
    margin-top: 2px;
    accent-color: #00ff41;
    flex-shrink: 0;
  }

  .selling-plan-option label {
    color: rgba(255, 255, 255, 0.95);
    font-weight: 400;
    margin: 0;
    cursor: pointer;
    flex-grow: 1;
    line-height: 1.6;
  }

  .selling-plan-option label strong {
    color: #00ff41;
    font-size: 1.05rem;
  }

  .quantity-selector {
    margin-bottom: 30px;
  }

  .quantity-selector label {
    display: block;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 10px;
    font-size: 1rem;
  }

  .quantity-selector input {
    width: 100px;
    padding: 12px;
    background: rgba(0, 255, 65, 0.05);
    border: 1px solid rgba(0, 255, 65, 0.3);
    border-radius: 8px;
    color: white;
    font-size: 1rem;
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 18px 40px;
    background: linear-gradient(135deg, #00ff41, #00cc33);
    color: #000;
    border: none;
    border-radius: 10px;
    font-size: 1.2rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 255, 65, 0.4);
  }

  .add-to-cart-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 255, 65, 0.6);
  }

  .add-to-cart-btn:active {
    transform: translateY(0);
  }

  .cart-message {
    margin-top: 20px;
    padding: 15px;
    border-radius: 8px;
    text-align: center;
    font-weight: 600;
  }

  .cart-message.success {
    background: rgba(0, 255, 65, 0.2);
    border: 1px solid #00ff41;
    color: #00ff41;
  }

  .cart-message.error {
    background: rgba(255, 65, 65, 0.2);
    border: 1px solid #ff4141;
    color: #ff4141;
  }

  @media (max-width: 968px) {
    .product-grid {
      grid-template-columns: 1fr;
      gap: 40px;
    }

    .product-images {
      position: static;
    }

    .product-images img,
    .product-image-placeholder {
      max-height: 350px;
    }

    .product-title {
      font-size: 2rem;
    }

    .price {
      font-size: 2.2rem;
    }
  }

  @media (max-width: 640px) {
    .product-page {
      padding: 80px 20px;
    }

    .product-title {
      font-size: 1.8rem;
    }

    .price {
      font-size: 2rem;
    }

    .product-images img,
    .product-image-placeholder {
      height: 280px;
    }

    .placeholder-icon {
      font-size: 80px;
    }

    .product-image-placeholder h3 {
      font-size: 1.5rem;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('product-form');
  const addButton = document.getElementById('add-to-cart');
  const btnText = addButton.querySelector('.btn-text');
  const messageDiv = document.getElementById('cart-message');

  if (form) {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      
      // Disable button
      addButton.disabled = true;
      btnText.textContent = 'Adding...';
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        // Success!
        btnText.textContent = 'âœ“ Added!';
        addButton.style.background = 'linear-gradient(135deg, #00ff41, #00dd3a)';
        
        messageDiv.textContent = 'Item added to cart successfully!';
        messageDiv.className = 'cart-message success';
        messageDiv.style.display = 'block';
        
        // Redirect to cart after brief delay
        setTimeout(() => {
          window.location.href = '/cart';
        }, 800);
      })
      .catch(error => {
        console.error('Error:', error);
        
        // Show error
        btnText.textContent = 'Add to Cart';
        addButton.disabled = false;
        
        messageDiv.textContent = 'Error adding to cart. Please try again.';
        messageDiv.className = 'cart-message error';
        messageDiv.style.display = 'block';
        
        setTimeout(() => {
          messageDiv.style.display = 'none';
        }, 3000);
      });
    });
  }
});
</script>

<script>
(function() {
  const BOT_SUBSCRIPTION_MONTHLY = '7995703263412';
  const BOT_SUBSCRIPTION_ANNUAL = '7995706015924';
  const SETUP_FEE = '7995945418932';
  
  const currentVariantId = '{{ product.selected_or_first_available_variant.id }}';
  
  // If this is a bot subscription product
  if (currentVariantId === BOT_SUBSCRIPTION_MONTHLY || currentVariantId === BOT_SUBSCRIPTION_ANNUAL) {
    console.log('Bot subscription product detected');
    
    // Find all add to cart buttons
    const addToCartButtons = document.querySelectorAll('[name="add"]');
    
    addToCartButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        const form = button.closest('form');
        if (form && form.getAttribute('action') === '/cart/add') {
          e.preventDefault();
          
          const formData = new FormData(form);
          const variantId = formData.get('id') || currentVariantId;
          
          console.log('Adding bot bundle...');
          
          // Add both items
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              items: [
                {
                  id: variantId,
                  quantity: 1
                },
                {
                  id: SETUP_FEE,
                  quantity: 1,
                  properties: {
                    '_Bundle': 'Bot Plan Setup Fee'
                  }
                }
              ]
            })
          })
          .then(response => response.json())
          .then(data => {
            console.log('Bundle added successfully');
            window.location.href = '/cart';
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Error adding to cart. Please try again.');
          });
        }
      });
    });
  }
})();
</script>

{% schema %}
{
  "name": "Product Information",
  "settings": []
}
{% endschema %}