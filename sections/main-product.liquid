{% comment %}
  sections/main-product.liquid
  Product page with add to cart functionality - No quantity selector
{% endcomment %}

<section class="product-page" data-product-handle="{{ product.handle }}">
  <div class="container">
    <div class="product-grid">
      <!-- Left Column: Product Info -->
      <div class="product-info">
        <h1 class="product-title">{{ product.title }}</h1>
        
        <div class="product-price">
          <span class="price">{{ product.selected_or_first_available_variant.price | money }}</span>
          {% if product.handle == 'trading-bot-suite-setup' or product.handle contains 'setup-fee' or product.handle == 'professional-setup' %}
            <span class="period">one-time</span>
          {% else %}
            <span class="period">/mo</span>
          {% endif %}
          {% if product.compare_at_price > product.price %}
            <span class="compare-price">{{ product.compare_at_price | money }}</span>
          {% endif %}
        </div>

        <!-- Setup Fee Info (for bot products only, NOT for setup product itself) -->
        {% if product.handle == 'trading-bot-suite-49' or product.handle == 'trading-bot-suite-490-annual' %}
          <div class="setup-fee-info">
            <p><strong>Optional:</strong> Professional Setup Service available separately for <strong>$249</strong> one-time</p>
            <a href="/#pricing" class="view-setup-link">View Setup Service →</a>
          </div>
        {% endif %}

        {% if product.description != blank %}
          <div class="product-description">
            <h3>What's Included:</h3>
            {{ product.description }}
          </div>
        {% else %}
          <div class="product-description">
            <h3>What's Included:</h3>
            <ul class="feature-list">
              {% if product.handle == 'trading-bot-suite-setup' or product.handle contains 'setup-fee' or product.handle == 'professional-setup' %}
                <li>✓ Professional Bot Installation</li>
                <li>✓ Custom Configuration</li>
                <li>✓ Initial Optimization</li>
                <li>✓ Priority Support Setup</li>
                <li>✓ One-on-One Onboarding</li>
              {% else %}
                <li>✓ Private Discord Access</li>
                <li>✓ Private Sniper Bot Discussion Channel</li>
                <li>✓ Automated Bot</li>
                <li>✓ Bot Configuration & Setup</li>
                <li>✓ Ongoing Bot Optimization</li>
                <li>✓ Priority Bot Support</li>
              {% endif %}
            </ul>
          </div>
        {% endif %}
      </div>

      <!-- Right Column: Form -->
      <div class="product-form-section">
        <!-- Plan Selector for Bot Suite Products (not for setup fee) -->
        {% if product.handle == 'trading-bot-suite-49' or product.handle == 'trading-bot-suite-490-annual' %}
          <div class="plan-selector">
            <label>Choose Your Plan:</label>
            <div class="plan-options">
              <div class="plan-option monthly-option">
                <input type="radio" name="plan_choice" id="monthly-plan" value="monthly" 
                  {% if product.handle == 'trading-bot-suite-49' %}checked{% endif %}>
                <label for="monthly-plan">
                  <strong>Monthly</strong>
                  <span class="plan-price">$49/mo</span>
                </label>
              </div>
              <div class="plan-option annual-option">
                <input type="radio" name="plan_choice" id="annual-plan" value="annual"
                  {% if product.handle == 'trading-bot-suite-490-annual' %}checked{% endif %}>
                <label for="annual-plan">
                  <strong>Annual</strong>
                  <span class="plan-price">$490/yr</span>
                  <span class="plan-savings">Save $98</span>
                </label>
              </div>
            </div>
          </div>
        {% endif %}

        <!-- Product Form -->
        {% form 'product', product, id: 'product-form' %}
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" id="variant-id">
          
          <!-- Hidden selling plan (auto-select first one if exists) -->
          {% if product.selling_plan_groups.size > 0 %}
            {% for selling_plan_group in product.selling_plan_groups %}
              {% for selling_plan in selling_plan_group.selling_plans %}
                {% if forloop.first %}
                  <input type="hidden" name="selling_plan" value="{{ selling_plan.id }}">
                {% endif %}
              {% endfor %}
            {% endfor %}
          {% endif %}
          
          <!-- Hidden quantity, always 1 -->
          <input type="hidden" name="quantity" value="1">

          <!-- Add to Cart Button -->
          <button type="submit" name="add" class="add-to-cart-btn" id="add-to-cart">
            <span class="btn-text">Add to Cart</span>
          </button>

          <div id="cart-message" class="cart-message" style="display: none;"></div>
        {% endform %}
      </div>
    </div>
  </div>
</section>

<style>
  .product-page {
    padding: 100px 20px 100px;
    background: linear-gradient(135deg, #0a0a0a 0%, #0d1b0d 100%);
    min-height: 80vh;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  /* 2 column layout by default */
  .product-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: start;
  }
  
  /* Single column centered for setup product */
  [data-product-handle="trading-bot-suite-setup"] .product-grid,
  [data-product-handle="professional-setup"] .product-grid,
  [data-product-handle="setup-fee"] .product-grid {
    grid-template-columns: 1fr;
    max-width: 800px;
    margin: 0 auto;
  }
  
  /* Remove sticky and center button for setup product */
  [data-product-handle="trading-bot-suite-setup"] .product-form-section,
  [data-product-handle="professional-setup"] .product-form-section,
  [data-product-handle="setup-fee"] .product-form-section {
    position: static !important;
    max-width: 100%;
    margin-top: 40px;
  }

  .product-info {
    padding-top: 0;
  }

  .product-title {
    font-size: 2.8rem;
    color: #00ff41;
    margin-bottom: 25px;
    font-weight: 700;
    line-height: 1.2;
  }

  .product-price {
    margin-bottom: 20px;
    display: flex;
    align-items: baseline;
    gap: 8px;
  }

  .price {
    font-size: 3rem;
    color: #00ff41;
    font-weight: 800;
  }

  .period {
    font-size: 1.3rem;
    color: rgba(0, 255, 65, 0.7);
  }

  .compare-price {
    font-size: 1.5rem;
    color: rgba(255, 255, 255, 0.4);
    text-decoration: line-through;
    margin-left: 15px;
  }

  .setup-fee-info {
    background: rgba(255, 165, 0, 0.1);
    border: 1px solid rgba(255, 165, 0, 0.3);
    border-radius: 12px;
    padding: 15px 20px;
    margin-bottom: 25px;
    color: rgba(255, 255, 255, 0.9);
    font-size: 0.95rem;
  }

  .setup-fee-info strong {
    color: #ffa500;
  }

  .view-setup-link {
    display: inline-block;
    margin-top: 10px;
    color: #ffa500;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .view-setup-link:hover {
    color: #ff8c00;
    text-decoration: underline;
  }

  .product-description {
    color: rgba(255, 255, 255, 0.85);
    line-height: 1.8;
    margin-bottom: 35px;
    font-size: 1.05rem;
  }

  .product-description h3 {
    color: white;
    font-size: 1.3rem;
    margin-bottom: 15px;
    margin-top: 0;
  }

  .feature-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .feature-list li {
    padding: 10px 0;
    border-bottom: 1px solid rgba(0, 255, 65, 0.1);
    font-size: 1rem;
  }

  .feature-list li:last-child {
    border-bottom: none;
  }

  /* Right column form section - STICKY by default for bot products */
  .product-form-section {
    background: transparent;
    border: none;
    border-radius: 20px;
    padding: 0;
    position: -webkit-sticky;
    position: sticky;
    top: 120px;
    align-self: flex-start;
    height: fit-content;
  }

  .plan-selector {
    background: rgba(0, 255, 65, 0.05);
    border: 1px solid rgba(0, 255, 65, 0.3);
    border-radius: 15px;
    padding: 25px;
    margin-bottom: 30px;
  }

  .plan-selector > label {
    display: block;
    color: white;
    font-weight: 700;
    margin-bottom: 20px;
    font-size: 1.1rem;
  }

  .plan-options {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
  }

  .plan-option {
    background: rgba(0, 255, 65, 0.03);
    border: 2px solid rgba(0, 255, 65, 0.2);
    border-radius: 12px;
    padding: 20px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
  }

  .plan-option:hover {
    background: rgba(0, 255, 65, 0.08);
    border-color: rgba(0, 255, 65, 0.4);
    transform: translateY(-2px);
  }

  .plan-option input[type="radio"] {
    position: absolute;
    opacity: 0;
  }

  .plan-option:has(input[type="radio"]:checked) {
    border-color: #00ff41;
    background: rgba(0, 255, 65, 0.12);
    box-shadow: 0 0 20px rgba(0, 255, 65, 0.3);
  }

  .plan-option:has(input[type="radio"]:checked) label::before {
    content: '✓';
    position: absolute;
    top: 10px;
    right: 10px;
    background: #00ff41;
    color: #000;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    font-size: 14px;
  }

  .plan-option label {
    display: flex;
    flex-direction: column;
    gap: 8px;
    cursor: pointer;
    margin: 0;
    position: relative;
    padding-right: 30px;
  }

  .plan-option label strong {
    font-size: 1.2rem;
    color: white;
  }

  .plan-price {
    font-size: 1.5rem;
    color: #00ff41;
    font-weight: 700;
  }

  .plan-savings {
    display: inline-block;
    background: rgba(0, 255, 65, 0.2);
    color: #00ff41;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.85rem;
    font-weight: 600;
    margin-top: 5px;
  }

  .add-to-cart-btn {
    width: 100%;
    padding: 18px 40px;
    background: linear-gradient(135deg, #00ff41, #00cc33);
    color: #000;
    border: none;
    border-radius: 10px;
    font-size: 1.2rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 255, 65, 0.4);
  }

  .add-to-cart-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 255, 65, 0.6);
  }

  .add-to-cart-btn:active {
    transform: translateY(0);
  }

  .cart-message {
    margin-top: 20px;
    padding: 15px;
    border-radius: 8px;
    text-align: center;
    font-weight: 600;
  }

  .cart-message.success {
    background: rgba(0, 255, 65, 0.2);
    border: 1px solid #00ff41;
    color: #00ff41;
  }

  .cart-message.error {
    background: rgba(255, 65, 65, 0.2);
    border: 1px solid #ff4141;
    color: #ff4141;
  }

  @media (max-width: 968px) {
    .product-grid {
      grid-template-columns: 1fr;
      gap: 40px;
    }

    .product-form-section {
      position: static !important;
    }

    .product-title {
      font-size: 2rem;
    }

    .price {
      font-size: 2.2rem;
    }

    .plan-options {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 640px) {
    .product-page {
      padding: 80px 20px;
    }

    .product-title {
      font-size: 1.8rem;
    }

    .price {
      font-size: 2rem;
    }

    .product-form-section {
      padding: 0;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Plan switcher
  const monthlyOption = document.querySelector('.monthly-option');
  const annualOption = document.querySelector('.annual-option');
  
  if (monthlyOption) {
    monthlyOption.addEventListener('click', function() {
      window.location.href = '/products/trading-bot-suite-49';
    });
  }
  
  if (annualOption) {
    annualOption.addEventListener('click', function() {
      window.location.href = '/products/trading-bot-suite-490-annual';
    });
  }

  // Standard add to cart functionality
  const form = document.getElementById('product-form');
  const addButton = document.getElementById('add-to-cart');
  const btnText = addButton ? addButton.querySelector('.btn-text') : null;
  const messageDiv = document.getElementById('cart-message');

  if (form && addButton) {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      
      // Disable button
      addButton.disabled = true;
      btnText.textContent = 'Adding...';
      
      // Add product to cart
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to add to cart');
        }
        return response.json();
      })
      .then(data => {
        console.log('✅ Item added successfully');
        
        // Success!
        btnText.textContent = '✓ Added!';
        addButton.style.background = 'linear-gradient(135deg, #00ff41, #00dd3a)';
        
        messageDiv.textContent = 'Item added to cart successfully!';
        messageDiv.className = 'cart-message success';
        messageDiv.style.display = 'block';
        
        // Redirect to cart
        setTimeout(() => {
          window.location.href = '/cart';
        }, 800);
      })
      .catch(error => {
        console.error('❌ Error:', error);
        
        // Show error
        btnText.textContent = 'Add to Cart';
        addButton.disabled = false;
        
        messageDiv.textContent = 'Error adding to cart. Please try again.';
        messageDiv.className = 'cart-message error';
        messageDiv.style.display = 'block';
        
        setTimeout(() => {
          messageDiv.style.display = 'none';
        }, 3000);
      });
    });
  }
});
</script>

{% schema %}
{
  "name": "Product Information",
  "settings": []
}
{% endschema %}